version: '3.8'

services:
  api:
    build:
      context: ./api
      target: production
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT:-3306}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DB_NAME=${DB_NAME}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRATION=24h
      - BYPASS_AUTH=false
      - LOG_LEVEL=error
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS}
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - vtria-network

  client:
    build:
      context: ./client
      target: production
    ports:
      - "3000:80"
    environment:
      - NODE_ENV=production
    depends_on:
      - api
    restart: unless-stopped
    networks:
      - vtria-network

  db:
    image: mysql:8.0
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./sql/schema:/docker-entrypoint-initdb.d
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASS}
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "${DB_USER}", "--password=${DB_PASS}" ]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    networks:
      - vtria-network

volumes:
  mysql_data:


networks:
  vtria-network:
    driver: bridge
